{"version":3,"sources":["Sub.tsx","Add.tsx","Total.tsx","App.tsx"],"names":["Sub","props","useState","sub","setSub","number","onChangeNumber","TextInput","style","styles","input","value","onChangeText","placeholder","keyboardType","Pressable","myButtons","onPress","data","parseInt","Text","myText","useEffect","addE","StyleSheet","create","padding","color","marginLeft","height","margin","borderWidth","Add","add","setAdd","addB","Total","total","setTotal","setStorage","myBol","budgetBalance","presser","JSON","stringify","a","async","AsyncStorage","setItem","getItem","console","log","getData","top","fontSize","textAlign","App","View","container","heading","budgetBalanceHeader","StatusBar","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","file":"static/js/app.d0e589a3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Pressable, TextInput } from 'react-native';\r\nimport Total from './Total';\r\nexport default function Sub(props){\r\n    const [sub,setSub]=useState(0);\r\n    const [number, onChangeNumber] = useState('');\r\n    const submit=(data)=>{\r\n        setSub(data);\r\n        onChangeNumber('');\r\n    }\r\n    return(\r\n    <div>\r\n        <TextInput\r\n        style={styles.input}\r\n        value={number}\r\n        onChangeText={onChangeNumber}\r\n        placeholder=\"Subtract an Expense\"\r\n        keyboardType=\"numeric\"\r\n      />\r\n    <Pressable style={styles.myButtons} onPress={()=>submit(parseInt(number))}>\r\n        <Text style={styles.myText}>Subtract an expense</Text>\r\n        <h1>{\"-\"+sub}</h1>\r\n        {useEffect(()=>{\r\n        props.addE(sub);\r\n    },[sub])}\r\n    </Pressable>\r\n    </div>\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    myButtons:{\r\n        padding:20,\r\n      },\r\n      myText:{\r\n        color:'black',\r\n        marginLeft:0,\r\n      },\r\n      input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n      },\r\n  });","import { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Pressable, TextInput } from 'react-native';\r\nimport Total from './Total';\r\nexport default function Add(props){\r\n    const [add,setAdd]=useState(0);\r\n    const [number, onChangeNumber] = useState('');\r\n    const submit=(data)=>{\r\n        setAdd(data);\r\n        onChangeNumber('');\r\n    }\r\n    return(\r\n        <div>\r\n        <TextInput\r\n        style={styles.input}\r\n        value={number}\r\n        placeholder=\"Add a budget\"\r\n        keyboardType=\"numeric\"\r\n        onChangeText={onChangeNumber}\r\n      />\r\n    <Pressable style={styles.myButtons} onPress={()=>submit(parseInt(number))}>\r\n        <Text style={styles.myText}>Add budget</Text>\r\n        <h1>{add}</h1>\r\n        {useEffect(()=>{\r\n        props.addB(add);\r\n    },[add])}\r\n        \r\n    </Pressable>\r\n    </div>\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    myButtons:{\r\n        padding:20,\r\n      },\r\n      myText:{\r\n        color:'black',\r\n      },\r\n      input: {\r\n        height: 40,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n      },\r\n  });","import { SetStateAction, useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Pressable, TextInput,  } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport Sub from './Sub';\r\nimport Add from './Add';\r\nexport default function Total(){\r\n    const [total,setTotal]=useState(0);\r\n    const [add,setAdd]=useState(0);\r\n    const [sub,setSub]=useState(0);\r\n    const [lStorage,setStorage]=useState(false);\r\n    const [testBol,setBol]=useState();\r\n    const [test,setTest]=useState();\r\n    let myBol=false;\r\n    const storeData = async (value: string) => {\r\n        try {\r\n          await AsyncStorage.setItem('Balance', value)\r\n        } catch (e) {\r\n          // saving error\r\n        }\r\n      }\r\n    const resetTotal=()=>{\r\n        setTotal(0);\r\n        setAdd(0);\r\n        setSub(0);\r\n        \r\n    }\r\n    const calculateTotal=()=>{\r\n        setTotal(add-sub);\r\n        setStorage(true)\r\n    }\r\n    const setBud=(data: SetStateAction<number>)=>{\r\n        setAdd(data);\r\n    }\r\n    const setExp=(data: SetStateAction<number>)=>{\r\n        setSub(data);\r\n    }\r\n    useEffect(()=>{\r\n        calculateTotal();\r\n        \r\n    },[add,sub]);\r\n   \r\n    const getData = async () => {\r\n    \r\n        try {\r\n          const value = await AsyncStorage.getItem('Balance')\r\n          if(value !== null) {\r\n            console.log(\"my value!\"+parseInt(value));\r\n\r\n            setTotal(parseInt(value));\r\n            myBol=true;\r\n            // value previously stored\r\n          }\r\n        } catch(e) {\r\n          // error reading value\r\n        }\r\n      }\r\n\r\n    \r\n    return(\r\n    <div>\r\n        {myBol?<Text style={styles.budgetBalance}>${``}</Text>:<Text style={styles.budgetBalance}>${total}</Text>}\r\n        <Add addB={setBud}/>\r\n        <Sub addE={setExp}/>\r\n        <Pressable style={styles.presser} onPress={()=>storeData(JSON.stringify(total))}>\r\n        <Text>Save balance</Text>\r\n        </Pressable>\r\n        <Pressable style={styles.presser} onPress={()=>resetTotal()}>\r\n            <Text>Reset balance</Text>\r\n        </Pressable>\r\n        <Pressable onPress={()=>getData()}>\r\n      <Text style={styles.presser}>Load previous budget</Text>\r\n      </Pressable>     \r\n    </div>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\nbudgetBalance: {\r\n    // position: 'absolute',\r\n    top: 140,\r\n    fontSize:20,\r\n    color:\"black\",\r\n    textAlign:\"center\",\r\n    marginLeft:\"10px\",\r\n  },\r\n  presser:{\r\n      padding:10,   \r\n      marginLeft:\"10px\",\r\n  }\r\n});","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Pressable } from 'react-native';\n\nimport Total from './Total'\nimport { useState, useEffect, SetStateAction } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nexport default function App() {\n  const  [total,getTotal]=useState();\n  const [lStorage,setStorage]=useState(0);\n  const [myStorage,setMyStorage]=useState(false);\n  const setStorages=(data: SetStateAction<number>)=>{\n    setStorage(data);\n    console.log(lStorage);\n    \n}\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Zachary's Budget App</Text>\n      <Text style={styles.budgetBalanceHeader}>Budget Balance</Text>\n      <Total/>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'skyblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  heading: {\n    // position: 'absolute',\n    top: 30,\n    fontSize:20,\n    color:\"white\",\n    padding:\"20px\"\n  },\n  budgetBalanceHeader: {\n    // position: 'absolute',\n    top: 90,\n    fontSize:20,\n    color:\"black\",\n  },\n  budgetBalance: {\n    // position: 'absolute',\n    top: 140,\n    fontSize:20,\n    color:\"black\",\n  },\n});\n"],"sourceRoot":""}